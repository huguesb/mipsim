#############################################################################
# Makefile for building: simips
# Generated by qmake (2.01a) (Qt 4.6.2) on: Fri May 28 23:27:43 2010
# Project:  mipsim.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile mipsim.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -D_SHELL_USE_READLINE_
CFLAGS        = -pipe -std=c99 -g -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W $(DEFINES)
INCPATH       = -I.
LINK          = gcc
LFLAGS        = -Wl,--hash-style=gnu -Wl,--as-needed
LIBS          = /usr/lib64/libreadline.a /usr/lib64/libncursesw.a $(SUBLIBS)
AR            = ar cqs
RANLIB        = 
#QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = main.c \
		util.c \
		config.c \
		io.c \
		shell.c \
		elffile.c \
		mipself.c \
		mips.c \
		mips_p.c \
		decode.c \
		memory.c \
		monitor.c 
OBJECTS       = .obj/main.o \
		.obj/util.o \
		.obj/config.o \
		.obj/io.o \
		.obj/shell.o \
		.obj/elffile.o \
		.obj/mipself.o \
		.obj/mips.o \
		.obj/mips_p.o \
		.obj/decode.o \
		.obj/memory.o \
		.obj/monitor.o

QMAKE_TARGET  = simips
DESTDIR       = 
TARGET        = simips

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: mipsim.pro
	$(QMAKE) -unix -o Makefile mipsim.pro
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile mipsim.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/simips1.0.0 || $(MKDIR) .obj/simips1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/simips1.0.0/ && (cd `dirname .obj/simips1.0.0` && $(TAR) simips1.0.0.tar simips1.0.0 && $(COMPRESS) simips1.0.0.tar) && $(MOVE) `dirname .obj/simips1.0.0`/simips1.0.0.tar.gz . && $(DEL_FILE) -r .obj/simips1.0.0


clean: FORCE 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


##### Compile

.obj/main.o: main.c version.h \
		config.h \
		shell.h \
		mips.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/main.o main.c

.obj/util.o: util.c util.h \
		io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/util.o util.c

.obj/config.o: config.c config.h \
		mips.h \
		io.h \
		util.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/config.o config.c

.obj/io.o: io.c io.h \
		config.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/io.o io.c

.obj/shell.o: shell.c shell.h \
		mips.h \
		io.h \
		util.h \
		config.h \
		mipself.h \
		elffile.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/shell.o shell.c

.obj/elffile.o: elffile.c elffile.h \
		io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/elffile.o elffile.c

.obj/mipself.o: mipself.c mipself.h \
		mips.h \
		elffile.h \
		io.h \
		config.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/mipself.o mipself.c

.obj/mips.o: mips.c mips.h \
		io.h \
		util.h \
		decode.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/mips.o mips.c

.obj/mips_p.o: mips_p.c mips_p.h \
		mips.h \
		io.h \
		monitor.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/mips_p.o mips_p.c

.obj/decode.o: decode.c decode.h \
		mips.h \
		io.h \
		util.h \
		monitor.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/decode.o decode.c

.obj/memory.o: memory.c mips.h \
		io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/memory.o memory.c

.obj/monitor.o: monitor.c monitor.h \
		mips.h \
		io.h \
		config.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o .obj/monitor.o monitor.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

